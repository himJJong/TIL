Java 

- Priority Queue
- 먼저 들어온 순서대로 나가는 Queu의 속성보다 우선순위를 먼저 결정하고 그 우선순위가 높은 엘리먼트가
먼저 나가는 자료구조. 보통 힙을 이용하여 구현하는 것이 일반적이다.

- Comparator

Arrays.sort(str,new Comparator<String>(){
	public int compare(String o1,String o2) {
		return(o2+o1).compareTo(o1+o2);  => 내림차순      
	      //return(o1+o2).compareTo(o1+o2); => 오름차순
	      }
	  });

- 배열 역순 변환 방법
1) 반복문

2) Collection.reverse()

ex)
 Integer[] arr = {1,2,3,4,5};
 List<Integer> list = Arrays.asList(arr); ->원본 배열을 함수의 파라미터로 전달하여 List형태로 변경
 Collections.reverse(list); -> list를 collections를 이용하여 역순으로 변환
 list.toArray(arr); -> list를 다시 배열 형태로 변환
 

- Stack class => push(), pop(), peek(), empty(), search()

push() vs add()
push()는 stack에서 제공, push()의 리턴값은  <E>이고
add()는 List에서 제공하는 메서드이다. add()의 리턴값은 boolean

isEmpty() vs empty()
isEmpty() : Stack 비어있는지 확인
empty() : Stack을 초기화

-------------------------------------------------------------------
Spring boot

queryparam , Json data parsing, controller
application.yml, application-secret.yml, application-test.yml, application.properties
h2, mysql , Log4j

