Toss slash 2021
Test code 효율성과 중요성
쿠버네티스, db 스케일 아웃, ORM

RDBMS와 Scale out -> 관계 데이 베이스의 확장

MySQL, Postgres, Oracle등의 기존 RDBMS에서는 세 가지 Scale out 방법이 있다

- Replication(복제)
    - Master Node와 Slave Node를 따로 두어서, Master Node에 CUD 작업의 책임을 주고, Slave Node에 Read의 책임을 주는 것
    - Master → Slave의 방향으로 데이터가 전파됨
    - 상대적으로 다중화가 쉬운 Slave에 부하 분산이 목적
    - Single Master와 Multi Master Replication으로 나뉘어짐
    - Master 혹은 Slave 전체가 죽으면 제대로 동작하지 않음
- Clustering
    - 여러 DB Node를 두어 모든 노드가 전체 데이터를 저장하는 전략
    - 고가용성 시스템에 적절하고, 한 노드가 죽더라도 다른 노드에 저장된 데이터들이 온전히 존재함
    - 데이터 동기화에 추가적인 시간이 걸림 - Consistency(일관성), Latency(지연시간) 관련 문제 존재
    - 모든 노드가 전체 데이터를 가지고 있어 스토리지 차원에서 비효율적
- Sharding (하나의 거대한 데이터베이스나 네트워크 시스템을 여러 개의 작은 조각으로 나누어 분산 저장하여 관리하는 것)
    - 테이블의 데이터를 Hash 혹은 Range로 나누어서 Shard별로 Row들을 분산해서 저장하는 전략
    - 스토리지 차원에서 효율적
    - 특히 Row가 많을 경우 부하 분산에 효율적
    - MySQL 기준, **Shard간의 Cross Join이 불가**

실제로 올려본 경험은 없는 이유? 필요성을 못 느끼고 우리가 아는 DB에서 세팅이 어려워서..

- 필요성은 부하 테스트를 통해 만들 수 있음
- 세팅은 자체적으로 분산 시스템 구조를 적용하고 있는 RDBMS를 쓰면 쉬움
- MySQL, Postgres, Oracle은 Scale out의 필요성이 없었던 옛날에서는 최고였음
    - 그러나 Scale out을 통해 아키텍처가 분산화되는 현재는 놓아줘야 할 때
- DB 인스턴스를 꼭 하나만 둬야 할 이유는 없음. 
DB 인스턴스(가상 장비와 설치된 Microsoft SQL Server를 아우르는 개념으로, RDS for MS-SQL에서 제공하는 Microsoft SQL Server의 단위)
- DB를 꼭 위 셋중에 하나만 써야 할 이유도 없음

=================================================================================================

웹서버 vs WAS

웹 서버 - 클라이언트가 웹 브라우저에서 어떠한 페이지 요청으 하면 웹 서버에서 그 요청을 받아 정적 컨텐츠를 제공하는 서버.
정적 컨텐츠마 제공하는 것은 아니고 웹서벅 동적 컨텐으를 요청 받으면 WAS에게 해다 요청을 넘겨주고, WAS에서 처리하 결과르 클라이언트에 전달해주는 역할도 함.
ex) Apache

WAS - 웹 서버와 웹 컨테이너가 합쳐진 형태로, 웹 서버 단독으로는 처리할 수 없는 데이터베이스의 조회와 다양한 로직 처리가 필요한 동적컨텐츠 제공.
WAS느 JSP, Servlet 구동 환경을 제공해주기 때문에 웹 컨테인 혹은 서블릿 컨테이너라고도 불림.
웹 컨테이너 - 웹 서버가 보낸 JSP,PHP등 파일을 수행한 결과르 다시 웹서버로 보내주는 역할을 함
ex) Tomcat


OLTP vs OLAP

- Online Transaction Processing
    - WAS와 연동되는 비교적 소규모 데이터베이스에서 데이터 CRUD에 사용되는 쿼리
    - 트랜잭션이므로 ACID 요소가 중요시됨
    - 빠른 조회 등의 레이턴시가 중요함
    - 다운타임 없이 트랜잭션 처리와 데이터 무결성에 안정적이어야 함
- Online Analytical Processing
    - 데이터 웨어하우스등 큰 규모의 데이터베이스에서 데이터 분석에 사용되는 쿼리
    - 레이턴시는 상대적으로 중요하지 않음
