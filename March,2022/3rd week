<문자열 비교> 
.equals() , equalsIgnoreCase()

반올림 함수
<Math.round> 

<동등 비교>
피연산자 != 는 두 값이 다른지 검사

<정렬>
Arrays.sort(arr,Collections.reverseOrder());
Arrays.sort(arr);

<변환>
String mA = String.valueOf(변수명1);

String mB = Long.toString(변수명1);

String mC = Integer.toString(변수명2);

문자열 StringBuilder를 통해 .append로 붙이기

String을 Long으로 변환 long answer = Long.parseLong(concat);

<배열 선언>

int[] answer;
후
원하는 크기만큼 따로 설정 가능

<ArrayList를 int형 배열로 변환하는 방법>

List<Integer> list = new ArrayList<>();

int[] answer = list.stream()
		   .mapToInt(Integer::intValue)
		   .toArray();
		   
		   
< 배열의 원소 가공 >

1) map - 요소들을 특정조건에 해당하는 값으로 변환
2) filter - 요소들을 조건에 따라 걸러내는 작업
3) sorted - 요소들을 정렬해주는 작업
참고하면 좋은 블로그 - https://jeffrey-oh.tistory.com/160


3.18 
< 문자열 쪼개기 >

String[] modNum = str.split("");

str.char(index) -> 문자열의 i를 한개씩 가져와 출력할 수 있는 함수

숫자 (아스키 값)
1 - 49 , a - 97 , A - 65

try~catch
NumberFormatException


      
